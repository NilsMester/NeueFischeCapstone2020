{"version":3,"sources":["contexts/UserContext.js","service/LocalStorage.js","contexts/UserContextProvider.js","pages/loginPage/LoginPage.js","routing/ProtectedRoute.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","USER_DATA","ACCESS_TOKEN","UserContextProvider","children","useState","localStorage","getItem","token","setToken","userDataString","JSON","parse","e","console","error","loadUserDataFromLocalStorage","userData","setUserData","useEffect","decoded","jwtDecode","exp","Date","getTime","setItem","saveTokenToLocalStorage","stringify","saveUserDataToLocalStorage","log","Provider","value","tokenIsValid","loginWithUserCredentials","loginData","axios","post","then","response","data","emptyCredentials","username","password","LoginPage","useContext","credentials","setCredentials","setError","history","useHistory","onSubmit","event","preventDefault","push","catch","name","onChange","handleChange","type","target","ProtectedRoute","props","to","App","path","component","HomePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.146b3d4b.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst UserContext = createContext({});\n\nexport default UserContext;","const USER_DATA = 'USER_DATA';\nconst ACCESS_TOKEN = 'ACCESS_TOKEN';\n\nexport const loadTokenFromLocalStorage = () =>\n    localStorage.getItem(ACCESS_TOKEN);\n\nexport const saveTokenToLocalStorage = (token) =>\n    localStorage.setItem(ACCESS_TOKEN, token);\n\nexport const loadUserDataFromLocalStorage = () => {\n    const userDataString = localStorage.getItem(USER_DATA);\n\n    try {\n        return JSON.parse(userDataString);\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const saveUserDataToLocalStorage = (userData) => {\n    localStorage.setItem(USER_DATA, JSON.stringify(userData));\n};\n","import React, { useEffect, useState } from 'react';\nimport UserContext from './UserContext';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport {\n    loadTokenFromLocalStorage,\n    loadUserDataFromLocalStorage,\n    saveTokenToLocalStorage,\n    saveUserDataToLocalStorage,\n} from '../service/LocalStorage';\n\nexport default function UserContextProvider({ children }) {\n    const [token, setToken] = useState(loadTokenFromLocalStorage());\n    const [userData, setUserData] = useState(loadUserDataFromLocalStorage());\n\n    useEffect(() => {\n        if (token) {\n            try {\n                const decoded = jwtDecode(token);\n                if (decoded.exp > new Date().getTime() / 1000) {\n                    setUserData(decoded);\n                    saveTokenToLocalStorage(token);\n                    saveUserDataToLocalStorage(decoded);\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }, [token]);\n\n    const tokenIsValid = () =>\n        token && userData?.exp > new Date().getTime() / 1000;\n\n    const loginWithUserCredentials = (loginData) =>\n        axios\n            .post('/auth/login', loginData)\n            .then((response) => setToken(response.data));\n\n    return (\n        <UserContext.Provider\n            value={{\n                token,\n                tokenIsValid,\n                loginWithUserCredentials,\n                userData,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    );\n}\n","import React, { useContext, useState } from 'react';\nimport UserContext from '../../contexts/UserContext';\nimport {useHistory} from 'react-router-dom';\n\nconst emptyCredentials = {\n    username: '',\n    password: '',\n};\n\nexport default function LoginPage(){\n    const {loginWithUserCredentials} = useContext(UserContext);\n    const [credentials, setCredentials] = useState(emptyCredentials);\n    const [error, setError] = useState('');\n    const history = useHistory();\n    return(\n        <>\n            <h1>LOGIN</h1>\n            <main>\n                <form onSubmit={handleSubmit}>\n                    <label>\n                        Username\n                        <input\n                            name=\"username\"\n                            value={credentials.username}\n                            onChange={handleChange}\n                            type=\"text\"\n                        />\n                    </label>\n                    <label>\n                        Password\n                        <input\n                            name=\"password\"\n                            value={credentials.password}\n                            onChange={handleChange}\n                            type=\"password\"\n                        />\n                    </label>\n                    {error && <p>{error}</p>}\n                    <button>Login</button>\n                </form>\n            </main>\n        </>\n    );\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        loginWithUserCredentials(credentials)\n            .then(() => history.push('/'))\n            .catch(() => setError('Unknown username or password.'));\n    }\n\n    function handleChange(event) {\n        setCredentials({ ...credentials, [event.target.name]: event.target.value });\n    }\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../contexts/UserContext';\n\nexport default function ProtectedRoute(props) {\n    const {tokenIsValid} = useContext(UserContext);\n    return tokenIsValid() ? <Route {...props} /> : <Redirect to=\"/login\" />;\n}\n","import React from 'react';\n\nexport default function LoginPage() {\n\n    return(\n        <>\n            <h2>Du hast dich erfolgreich eingeloggt!</h2>\n        </>\n    )\n\n}\n\n","import React from 'react';\nimport UserContextProvider from \"./contexts/UserContextProvider\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport LoginPage from \"./pages/loginPage/LoginPage\";\nimport ProtectedRoute from \"./routing/ProtectedRoute\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n    return (\n        <UserContextProvider>\n            <Switch>\n                <Route path=\"/login\" component={LoginPage}/>\n                <ProtectedRoute path=\"/home\" component={HomePage}/>\n\n\n                <Route path=\"/\">\n                    <Redirect to=\"/home\" />\n                </Route>\n            </Switch>\n        </UserContextProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n    <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}